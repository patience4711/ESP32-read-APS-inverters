const char SECURITY[] PROGMEM = R"=====(
var message = "viewing this page is disabled!";
//function rtclickcheck(keyp){ if (navigator.appName == "Netscape" && keyp.which == 3){ alert(message); return false; }
//if (navigator.appVersion.indexOf("MSIE") != -1 && event.button == 2) { alert(message); return false; } }
//document.onmousedown = rtclickcheck;
)=====";

//<link rel="icon" type="image/x-icon" href="/favicon.ico" />
const char HTML_HEAD[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
<title>ESP32-ECU</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_SUBS">
<script type='text/javascript'>

function showSubmit() {
document.getElementById("sub").style.display = "block";
}
function submitFunction(a) {
document.getElementById("bo").innerHTML="<br>wait...<br>processing<br>your<br>request"; 
document.getElementById("bo").style.display="block"; 
document.getElementById('formulier').submit();
setTimeout(function(){window.location.href=a;}, 3000 ); 
}
function cl() {
window.location.href='/MENU';
}
</script>
</head>
)=====";
//.bt{display:block; width:124px; height:44px; padding:6px; margin:6px; text-align:center; border-radius:6px; color:white; background:red;
// font-weight:bold; font-size:18px; text-decoration:none;}
//.red{ background:#b9b9c1;color:white;border:2px solid black;}
//.rad {background:#cc99ff;color:white; border:2px solid black;}


const char STYLESHEET_HOME[] PROGMEM = R"=====(
#sectie li{float:none;}
body { background: linear-gradient(#e8f5f7, #caf5fb); color:navy; font-family:'lato',Verdana,Sans-serif; font-size:16px; }
.divstijl { background: linear-gradient(#e8edc8, #c8eaed); padding:0px 0px 0px 0px; width: 96%; height: 99%; }
#msect { display: flex; flex-basis: 100%; align-items: center; margin: 0px 0px; width:96vw;}
#msect:before, #msect:after { content: ""; flex-grow: 1;  margin: 0px 0px;}
kop { font-size: 4vw; font-weight:bold; padding-top: 1vh; padding-bottom: 1vh;}
p {color: #006600; font-family: 'lato',Verdana,Sans-serif; font-size:14px; }
tr {height:45px;} ul { list-style-type: none; margin: 0 auto 0 auto; padding: 0; overflow: hidden; background-color: #333; border-radius:6px;width: 96vw; height: 48px;}
li { float: left;} li a:hover { background-color: #ff0808 !important;} a:focus {background-color: red;} th { width:44px; }
li a { display: inline-block; color: white; text-align: center; padding: 14px 6px 10px; text-decoration: none; width:70px; font-size:20px;}
.close {color: red; font-size: 42px; font-weight: bold; cursor: pointer; width:70px; padding: 0px 20px;}.close:hover {color: green;} #fright {float:right;}
@media only screen and (max-width: 800px) { li a { font-size:16px; padding: 14px 26px 10px 12px; width: 50px; }}
)=====";

const char STYLESHEET_SUBS[] PROGMEM = R"=====(
body { background: linear-gradient(#e8f5f7, #caf5fb); color:navy; font-family:'lato',Verdana,Sans-serif; font-size:16px; }
kop { font-size: 4vw; font-weight:bold; padding-top: 1vh; padding-bottom: 1vh;}
input { font-size:24px; } .inp1 { width:46px; } .inp2 { width:62px; } .inp3 { width:76px; } .inp4 { width:180px;} .inp5 { width:172px;}.inp6 { width:230px;} 
option { direction: ltr;} .sb1 {font-size:22px; height:30px; } 
#bo {width:100%; height:100%; position: absolute; left:0; top:0; background-color:rgba(192,192,192,0.9); color:white; z-index:10; font-size: 90px;
  font-weight: bold; text-align: center; display: none;} #sub { float: left; background:green; display:none }
b {color: #;font-size:18px;font-weight:bold;} .close {color: red; font-size: 42px; font-weight: bold; cursor: pointer; width:70px; padding: 0px 20px;
}.close:hover {color: green;} input[type=checkbox] {width:30px; height:30px;} #fright {float:right;}
)=====";

//<script type='text/javascript'>setTimeout(function(){ window.location.href='/SW=BACK';}, 3000 ); </script>

const char CONFIRM[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
<title>ESP-ECU</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
</head>
<body>
<script type='text/javascript'>setTimeout(function(){ 
  window.location.href='/SW=BACK';}, 3000 ); </script>

<center><kop>PROCESSING YOUR REQUEST...</kop>
<br><br>
<div class='divstijl'>
Please wait while your request is being executed.<br><br>
If applicable, the data is saved and a reboot follows.<br><br>
Visit the log page or information page for more information<br><br>
This page will close automatically when the command is executed.<br>

<br><br>
<br>You will then return to the homepage. Check if the settings are correct.</center></div>
</body></html>
)=====";

const char CONFIRM_IP[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
<title>ESP-ECU</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
</head>
<body style='font-size:16px;'>
<script type='text/javascript'>setTimeout(function(){ window.location.href='http://{adres0}/'; }, 6000 ); </script>
<center>
<h1>SAVE IP SETTINGS</h1><div class='lijnstijl'></div><br><br><div class='divstijl'>
The IP settings are saved. <br><br>
Your Esp device is going to reboot. <strong>Wait util the led has blinked 3 times!</strong><br><br>
</body></html>
)=====";

const char CONFIRM_INV[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
<title>ESP-ECU</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
</head>
<body style='font-size:16px;'>
<script type='text/javascript'>setTimeout(function(){ window.location.href='/INV_CONFIG';}, 6000 ); </script>
<center>
<h1>PROCESSING THE INVERTER DATA...</h1><div class='lijnstijl'></div><br><br>
<div class='divstijl'>
The inverterdata are saved.<br><br>
In a moment the device is going to reboot.<br><br> 
You will be redirected to the inverter config page. 

<br><br>
</div>
<br><br> <a href='/SW=BACK'><span class='close'>&times;</span></a></body></html>
)=====";


//const char UPDATE_FORM[] PROGMEM = R"=====(
//<!DOCTYPE html><html><head><meta charset='utf-8'>
//<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
//<style> 
//input {
//  font-size:3vw;
//}  
//</style>
//<script>
//function showDiv() {
//document.getElementById('main').style.background="#b3ffd9";  
//document.getElementById('hiddendiv').innerHTML="<marquee><kop>updating firmware, do not interrupt .....</kop></marquee>";
//}
//</script></head>
//<body><div id='main'>
//<center><kop> HANSIART FIRMWARE UPDATER</kop>
//<br><br><br><table><tr><td>
//<form method='POST' action='/handleFwupdate' enctype='multipart/form-data' onsubmit='showDiv()'>
//<input id='inP' type='file' name='update' pattern='\S+' title='cannot be empty' required>
//<tr><td><br><tr><td><input type='submit' value='update'></form>
//<tr><td><br><tr><td><a href='/SW=BACK'><input type='submit' value='cancel'></table><br>
//<div id='hiddendiv' style='margin: 50px; width: 40%; background:#e7f2bd;'></div><br><br>
//</div></center></body></html>    
//)=====";

const char WAIT_PAIR[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
</head><body onload="loadScript()">
<center><br><br><h2>PAIRING INVERTER {#}</h2>
<br><br><br>
<div id="marq" style='margin: 50px; width: 40%; background:#e7f2bd;'>
<marquee><h3>pairing, do not interrupt .....</h3></marquee>
</div>
<div id="hiddenSucc" style="display:none"<br><br><br>
<h3>The pairing succeeded.
<br><br><br><a href="/LOGPAGE">click here</a></h3>
</div>
<div id="hiddenFail" style="display:none"<br><br><br>
<h3>The pairing failed.
<br><br><br><a href="/LOGPAGE">click here</a></h3>
</div>

<script>
function loadScript() {
  getData();
  loadData();
}

setInterval(function loadData() {
 getData()
},9000);

function getData() {
  var xhttp = new XMLHttpRequest();
  xhttp.onreadystatechange = function() {
    if (this.readyState == 4 && this.status == 200) {
      var antwoord = this.responseText;
      var obj = JSON.parse(antwoord);
      var invID = obj.invID;
      
      if( invID != "1111" ) {
          if( invID == "0000" ) {
            document.getElementById("marq").style.display = "none";
            document.getElementById("hiddenFail").style.display = "block";
            setTimeout(function(){ window.location.href='/'; }, 5000 );
          } else {
            document.getElementById("marq").style.display = "none";
            document.getElementById("hiddenSucc").style.display = "block";
            setTimeout(function(){ window.location.href='/'; }, 5000 );
          }
       }
    }
  }
  xhttp.open("GET", "get.Paired", true);
  xhttp.send();
}
</script>
</body></html>    
)=====";

const char REQUEST_DENIED[] PROGMEM = R"=====(
<!DOCTYPE html><html><head><meta charset='utf-8'>
<title>ESP-ECU</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="/STYLESHEET_HOME">
</head>
<body style='font-size:16px;'>
<script type='text/javascript'>setTimeout(function(){ window.location.href='/';}, 9000 ); </script>
<center>
<h1>ACCESS DENIED!</h1><div class='lijnstijl'></div><br><br>
<div class='divstijl'>
For security reasons you are not allowed to visit this page from outside your own network !<br><br> 
In seconds you will be redirected to the main page. 

<br><br>
</div>
<br><br> <a href='/'><span class='close'>&times;</span></a></body></html>
)=====";

//// favicon dd 7-7-2023
//#define FAVICON_len 257 
//const uint8_t FAVICON[] PROGMEM = {
//0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00, 0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52,
//0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x08, 0x06, 0x00, 0x00, 0x00, 0x57, 0x02, 0xf9,
//0x87, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xae, 0xce, 0x1c, 0xe9, 0x00, 0x00,
//0x00, 0x04, 0x67, 0x41, 0x4d, 0x41, 0x00, 0x00, 0xb1, 0x8f, 0x0b, 0xfc, 0x61, 0x05, 0x00, 0x00,
//0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0e, 0xc2, 0x00, 0x00, 0x0e, 0xc2, 0x01, 0x15,
//0x28, 0x4a, 0x80, 0x00, 0x00, 0x07, 0xce, 0x49, 0x44, 0x41, 0x54, 0x68, 0x43, 0xd5, 0x59, 0x5d,
//0x8c, 0x13, 0x55, 0x14, 0x3e, 0xd3, 0x76, 0xbb, 0x0b, 0xdb, 0xee, 0xae, 0xbb, 0xdb, 0x25, 0xc6,
//0xc5, 0x07, 0x59, 0x1e, 0x14, 0x1e, 0x8c, 0x0f, 0xf2, 0x93, 0xc8, 0x4f, 0x22, 0x90, 0x98, 0x40,
//0xa2, 0x80, 0x09, 0x66, 0x49, 0xd4, 0xa8, 0x11, 0x35, 0x6a, 0x34, 0x26, 0x10, 0x01, 0x57, 0x82,
//0x41, 0x44, 0x7e, 0x15, 0x88, 0xfc, 0x48, 0x62, 0x8c, 0x1a, 0x13, 0x1f, 0x34, 0xbe, 0x60, 0x8c,
//0x2c, 0x3c, 0x08, 0xf8, 0x60, 0x7c, 0x10, 0x7d, 0xe0, 0xe7, 0x81, 0x96, 0x04, 0xb6, 0xdb, 0x65,
//0x69, 0xbb, 0xbb, 0xb4, 0x9d, 0x76, 0x3c, 0xdf, 0xe9, 0xdc, 0xee, 0xb4, 0x3b, 0xd3, 0xce, 0x6c,
//0x17, 0x03, 0x5f, 0x32, 0x99, 0xe9, 0xdc, 0xb9, 0xe7, 0x9e, 0xef, 0x9c, 0x73, 0xcf, 0x3d, 0xf7,
//0x56, 0x33, 0x18, 0x74, 0x0f, 0xc3, 0x67, 0xde, 0xef, 0x59, 0x94, 0x11, 0x18, 0xd9, 0xb4, 0x85,
//0xf4, 0x0b, 0xff, 0x9a, 0xbf, 0xea, 0x07, 0x64, 0x41, 0xe6, 0x54, 0xc0, 0x51, 0x16, 0x42, 0x08,
//0x48, 0x6f, 0xdc, 0x62, 0x0c, 0x50, 0x93, 0x71, 0x83, 0x5f, 0xe9, 0xd1, 0x98, 0xf9, 0xb6, 0x3e,
//0x40, };//16 * 16 + 1 = 257


#define FAVICON_len 790
const uint8_t FAVICON[] PROGMEM = {
0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 
0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x08, 0x06, 0x00, 0x00, 0x00, 0x1F, 0xF3, 0xFF, 
0x61, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xAE, 0xCE, 0x1C, 0xE9, 0x00, 0x00, 
0x02, 0xD0, 0x49, 0x44, 0x41, 0x54, 0x38, 0x4F, 0x75, 0x93, 0x6B, 0x48, 0xD3, 0x61, 0x14, 0xC6, 
0x7F, 0xEF, 0xD6, 0x34, 0xB7, 0xB5, 0xFF, 0xD2, 0xB4, 0x9A, 0x5B, 0x69, 0x98, 0x5D, 0xD1, 0x96, 
0x69, 0x64, 0x5A, 0x11, 0x74, 0x87, 0x82, 0xFA, 0xD2, 0x87, 0xAE, 0x94, 0x41, 0x49, 0x14, 0x45, 
0x12, 0x15, 0x95, 0x51, 0x19, 0x74, 0x8F, 0x2E, 0x18, 0x05, 0x65, 0x48, 0x97, 0x0F, 0x7D, 0xEA, 
0x43, 0xD0, 0x3D, 0x8D, 0xCA, 0xAC, 0x44, 0x6D, 0x68, 0x97, 0xE5, 0x65, 0xB5, 0xE9, 0xAC, 0x4D, 
0xDD, 0xCA, 0x39, 0xFB, 0xFF, 0x63, 0x0B, 0xB4, 0x21, 0xBE, 0x9F, 0xCE, 0xCB, 0xF3, 0xBC, 0xE7, 
0x9C, 0xE7, 0x39, 0xE7, 0x15, 0xC5, 0xF5, 0xAD, 0x0A, 0x03, 0x1D, 0x45, 0x06, 0x04, 0x08, 0x31, 
0x20, 0x45, 0x14, 0xD7, 0xB5, 0x28, 0x86, 0xC6, 0xAF, 0x74, 0x24, 0x8D, 0xE9, 0x47, 0x1A, 0x77, 
0xEB, 0x06, 0x1D, 0xA3, 0x92, 0x71, 0x66, 0xE7, 0x44, 0x60, 0xEA, 0x40, 0x00, 0xAD, 0xEB, 0x3B, 
0x9D, 0xA3, 0x93, 0x11, 0xC5, 0x75, 0x2E, 0x25, 0xB7, 0x60, 0x3B, 0x15, 0x7B, 0x0E, 0x12, 0x18, 
0x1A, 0x1B, 0x26, 0x46, 0x7B, 0x3D, 0x04, 0x24, 0x23, 0x13, 0x4A, 0xAE, 0xE2, 0xCC, 0xCE, 0xC5, 
0x9B, 0x92, 0x0A, 0x28, 0x20, 0x54, 0x18, 0xBE, 0x7E, 0xC1, 0x7A, 0xEE, 0x24, 0xB6, 0x35, 0x1B, 
0x70, 0x5B, 0x33, 0x10, 0x21, 0x09, 0x7A, 0x47, 0x33, 0xE9, 0x17, 0xCE, 0x60, 0x5B, 0x9F, 0x87, 
0x27, 0x75, 0x3C, 0xE3, 0x6E, 0x96, 0xE0, 0x33, 0x99, 0x31, 0x34, 0xD8, 0x71, 0xCC, 0x9E, 0x8B, 
0xB9, 0xEC, 0x29, 0xEE, 0x34, 0x2B, 0x3E, 0x8B, 0x85, 0xAC, 0xA3, 0x85, 0x54, 0x6F, 0xCA, 0xC7, 
0x9B, 0x3A, 0x3E, 0x5C, 0x2C, 0x9C, 0x20, 0x14, 0xC4, 0xB4, 0xB6, 0x30, 0xE5, 0xFC, 0x69, 0x1A, 
0x17, 0x2C, 0xC6, 0x9B, 0x32, 0x96, 0xAC, 0xC3, 0x07, 0x90, 0x35, 0x1A, 0xDC, 0xE9, 0x56, 0xE2, 
0xAB, 0xAB, 0x78, 0xB3, 0x7B, 0x7F, 0x18, 0xAF, 0xC9, 0xDB, 0x82, 0xCF, 0x6C, 0xE9, 0x95, 0xD4, 
0x9B, 0x20, 0x54, 0xED, 0xF7, 0xB0, 0xF8, 0x30, 0x29, 0xAE, 0xAE, 0x86, 0x38, 0xED, 0x77, 0x06, 
0x99, 0x40, 0xEE, 0x84, 0xAE, 0x7A, 0x81, 0x4F, 0x9B, 0xC0, 0x8B, 0xA3, 0x27, 0xC2, 0x0F, 0x7D, 
0x89, 0x66, 0x64, 0x4D, 0x54, 0x64, 0x07, 0x89, 0xCF, 0x1E, 0x63, 0x7A, 0x59, 0x8E, 0xD4, 0x6C, 
0xC7, 0x92, 0xFC, 0x19, 0x8D, 0xA9, 0xCF, 0x79, 0x25, 0x00, 0x9E, 0x07, 0x83, 0xF8, 0x38, 0x73, 
0x19, 0x43, 0x1C, 0xCD, 0xBC, 0xDE, 0x77, 0x88, 0x1E, 0x9D, 0x2E, 0x32, 0x41, 0xE8, 0x66, 0x7A, 
0x51, 0xC6, 0x9C, 0xEB, 0xBB, 0x71, 0x4D, 0x1F, 0x4C, 0xE9, 0x8F, 0x91, 0xCC, 0x31, 0xB4, 0xF3, 
0xAE, 0xCB, 0x88, 0xC4, 0x2F, 0x56, 0xFD, 0x76, 0xF1, 0xD9, 0x9B, 0x45, 0x65, 0xC1, 0x5E, 0xBA, 
0x0D, 0x12, 0xB1, 0xB6, 0x5A, 0xBA, 0x25, 0x23, 0xE2, 0xB2, 0xCD, 0xA9, 0x64, 0x16, 0x15, 0x22, 
0xFE, 0xC8, 0xC4, 0xB4, 0xB9, 0x31, 0x47, 0xD7, 0xD2, 0x3D, 0x49, 0xC5, 0xC3, 0x9F, 0x7A, 0xD2, 
0xA4, 0x20, 0x0D, 0x7E, 0x35, 0x1A, 0x35, 0xE4, 0x0A, 0x3F, 0xEE, 0x47, 0x06, 0x9C, 0xD3, 0xB3, 
0x11, 0x3D, 0x41, 0x02, 0xB1, 0x71, 0x38, 0x67, 0xE4, 0xF4, 0x99, 0x18, 0xEA, 0x40, 0xFF, 0xCD, 
0xC1, 0x92, 0x5D, 0x2B, 0x91, 0x96, 0x08, 0x1A, 0xE5, 0x78, 0x46, 0xA8, 0x3C, 0x78, 0x14, 0x3D, 
0x5A, 0x11, 0x20, 0xEA, 0x83, 0x9F, 0x4F, 0xEA, 0x1C, 0x5E, 0x15, 0x16, 0xA1, 0xA8, 0x54, 0xFD, 
0x4D, 0x4C, 0xB9, 0x7B, 0x87, 0x84, 0xB7, 0x15, 0xC4, 0xB4, 0xB5, 0x31, 0x72, 0xF0, 0x27, 0xFC, 
0x53, 0x25, 0x5A, 0x84, 0x11, 0x8D, 0xF8, 0xC3, 0xA8, 0x16, 0x17, 0xFE, 0x72, 0x15, 0xEF, 0x37, 
0x6E, 0x23, 0xE1, 0xFD, 0x5B, 0xAA, 0xB6, 0xEE, 0x20, 0x60, 0x1C, 0x1A, 0xE9, 0x81, 0x90, 0x65, 
0x14, 0x95, 0x60, 0xE2, 0xF5, 0xAB, 0x0C, 0xAF, 0xAC, 0x20, 0xD6, 0x59, 0x4F, 0x94, 0x14, 0x44, 
0xEE, 0x52, 0xD3, 0xA9, 0x1E, 0x81, 0x63, 0x46, 0x0E, 0xBE, 0x44, 0x0B, 0xF6, 0xA5, 0xCB, 0x23, 
0xB6, 0xB2, 0x77, 0x8C, 0x28, 0x0A, 0xA1, 0xD5, 0xD5, 0x39, 0x9D, 0xFF, 0x96, 0xE7, 0xD9, 0x23, 
0xA2, 0xDB, 0xDB, 0xA9, 0xCA, 0xDF, 0xCE, 0xB4, 0xE3, 0x47, 0x28, 0x3F, 0x76, 0x8A, 0x59, 0x3B, 
0xB7, 0x52, 0x9B, 0xB7, 0x99, 0x1F, 0x93, 0xD2, 0xFA, 0x4B, 0x98, 0x7C, 0xE5, 0x12, 0x41, 0x9D, 
0x8E, 0xFA, 0x95, 0xAB, 0x49, 0xBD, 0x5D, 0x4A, 0xD3, 0xBC, 0x85, 0x64, 0x16, 0x1D, 0xA2, 0xEC, 
0xF8, 0x59, 0x92, 0xEE, 0xDF, 0xA3, 0x35, 0x23, 0x93, 0x60, 0x8C, 0x8E, 0xF4, 0x8B, 0x67, 0x69, 
0xB5, 0x66, 0xD0, 0x34, 0x7F, 0x51, 0x9F, 0x84, 0xB8, 0x0F, 0x35, 0x24, 0x3E, 0x7F, 0x82, 0x6D, 
0xED, 0x06, 0x7A, 0xB4, 0xFF, 0xE6, 0x3B, 0xA4, 0xC1, 0x8E, 0xE5, 0xE9, 0x63, 0x6C, 0xEB, 0x36, 
0x46, 0xB6, 0x2C, 0xCB, 0x4C, 0xBC, 0x76, 0x05, 0x7D, 0x53, 0x23, 0xD5, 0xF9, 0xDB, 0x22, 0xA7, 
0xF0, 0x3F, 0x53, 0xF7, 0xCD, 0xC1, 0xF0, 0xCA, 0xD7, 0xD8, 0x97, 0xAD, 0x18, 0xF0, 0x2B, 0x87, 
0x80, 0xBF, 0x57, 0x60, 0x31, 0x2E, 0xFE, 0xFF, 0xDC, 0x94, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 
0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
};  // 50 *16 -/- 10 = 790

//#define FAVICON_len 570
//const uint8_t FAVICON[] PROGMEM = {
//0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D, 0x49, 0x48, 0x44, 0x52, 
//0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x30, 0x08, 0x02, 0x00, 0x00, 0x00, 0xD8, 0x60, 0x6E, 
//0xD0, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xAE, 0xCE, 0x1C, 0xE9, 0x00, 0x00, 
//0x00, 0x04, 0x67, 0x41, 0x4D, 0x41, 0x00, 0x00, 0xB1, 0x8F, 0x0B, 0xFC, 0x61, 0x05, 0x00, 0x00, 
//0x00, 0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC3, 0x00, 0x00, 0x0E, 0xC3, 0x01, 0xC7, 
//0x6F, 0xA8, 0x64, 0x00, 0x00, 0x01, 0xBF, 0x49, 0x44, 0x41, 0x54, 0x58, 0x47, 0xED, 0x94, 0x8B, 
//0x6D, 0xC3, 0x30, 0x0C, 0x44, 0x33, 0x41, 0xF7, 0xEF, 0x48, 0x1D, 0x21, 0x2B, 0x64, 0x09, 0xF7, 
//0xE2, 0x13, 0x2E, 0x34, 0xF5, 0xA3, 0x3F, 0x72, 0x02, 0xB7, 0x87, 0x87, 0x96, 0x21, 0x19, 0xE9, 
//0x41, 0x05, 0x7A, 0xFB, 0xBE, 0x3F, 0x3E, 0x8A, 0x7F, 0xA1, 0x1E, 0x17, 0x12, 0xBA, 0xED, 0x8B, 
//0x3B, 0x4D, 0xEC, 0x12, 0x9A, 0x7E, 0xBE, 0xB6, 0xB1, 0x42, 0x68, 0x9A, 0x26, 0xD7, 0xA9, 0x31, 
//0x5C, 0x08, 0x2A, 0xB2, 0x89, 0x68, 0x6D, 0x16, 0x6A, 0xD8, 0x80, 0x34, 0xA3, 0x0D, 0xC2, 0x9A, 
//0xCD, 0x06, 0x83, 0x9E, 0x07, 0x78, 0x21, 0x86, 0x1D, 0x8E, 0x8A, 0x0C, 0x7A, 0x1E, 0xF0, 0x1C, 
//0x53, 0x82, 0xC9, 0x3F, 0x16, 0x19, 0x2B, 0x04, 0xD2, 0xFD, 0x26, 0xDA, 0x28, 0x32, 0x5C, 0x08, 
//0xC8, 0x83, 0x05, 0xA2, 0x51, 0xCE, 0x36, 0xA1, 0xAE, 0x0D, 0xF0, 0x42, 0x8C, 0x9A, 0x35, 0xCE, 
//0x10, 0x22, 0x67, 0xDA, 0x14, 0xEF, 0xEA, 0x2B, 0xE7, 0xEC, 0x17, 0x9A, 0xFF, 0x0C, 0xAF, 0xA8, 
//0x0F, 0x4E, 0x12, 0x2A, 0xDA, 0xB8, 0x9A, 0xBC, 0x4D, 0x48, 0x05, 0xA3, 0xE9, 0xD9, 0x42, 0xE9, 
//0xFE, 0x65, 0xD8, 0x4F, 0x87, 0xF3, 0x57, 0x9C, 0x9D, 0xCF, 0x03, 0x28, 0xE1, 0xA2, 0xE9, 0x3B, 
//0x85, 0xEC, 0x47, 0x4D, 0x87, 0x0B, 0x39, 0x1B, 0x42, 0x03, 0xAA, 0x20, 0x76, 0xD4, 0x12, 0x4A, 
//0xEB, 0x73, 0xD4, 0xC4, 0x05, 0x2E, 0xCE, 0xC0, 0x91, 0x96, 0x4C, 0x74, 0x94, 0x3D, 0x56, 0x54, 
//0x85, 0xE4, 0xC1, 0x82, 0xB1, 0x0B, 0x04, 0x17, 0x38, 0x83, 0x06, 0xD6, 0xA6, 0x46, 0x47, 0xC8, 
//0xC5, 0xED, 0x80, 0xF3, 0x84, 0x48, 0x12, 0x31, 0x71, 0x0B, 0x71, 0xA1, 0x88, 0x0D, 0xD8, 0xF5, 
//0x42, 0x87, 0x3F, 0x0F, 0x88, 0x0A, 0xB1, 0x63, 0x17, 0xC0, 0xE1, 0xCF, 0x03, 0x5A, 0x7B, 0x0D, 
//0x15, 0x72, 0xB6, 0x10, 0xA9, 0xD9, 0x80, 0xA0, 0x50, 0xDC, 0x06, 0xAC, 0x58, 0xCD, 0x89, 0x08, 
//0xAD, 0xB2, 0x01, 0x17, 0x12, 0x1A, 0x61, 0x03, 0xFE, 0x92, 0xD0, 0x06, 0x1B, 0x70, 0x21, 0x21, 
//0x80, 0x2B, 0x95, 0xDC, 0xC6, 0xC6, 0x7E, 0x6B, 0xFE, 0xEF, 0x96, 0x62, 0xFB, 0xC4, 0x0B, 0x15, 
//0x97, 0xBA, 0xE0, 0x4A, 0x27, 0x64, 0xB1, 0x42, 0x3C, 0x7F, 0x96, 0x59, 0x14, 0x62, 0xB1, 0x6A, 
//0xA3, 0x7E, 0x84, 0x86, 0x50, 0xF1, 0x79, 0x54, 0x20, 0x76, 0x0A, 0xD2, 0x76, 0x1A, 0x2E, 0xA3, 
//0xA5, 0x2E, 0x35, 0x21, 0x67, 0x03, 0x74, 0x32, 0x0B, 0x84, 0xB5, 0x16, 0xAA, 0x42, 0xDA, 0x88, 
//0x50, 0x14, 0xCA, 0x6D, 0x80, 0x0E, 0xD7, 0x4F, 0x16, 0xE2, 0xF9, 0x1D, 0x76, 0x15, 0xCD, 0x6C, 
//0xDD, 0xC6, 0x09, 0xE1, 0x63, 0xD1, 0x06, 0xF0, 0x0A, 0x44, 0xB5, 0x9D, 0x02, 0xFF, 0x42, 0xF6, 
//0x23, 0xEB, 0x08, 0x56, 0xA8, 0xA6, 0x22, 0x78, 0x38, 0xE3, 0x46, 0xE0, 0xF5, 0x65, 0x6D, 0xB0, 
//0x40, 0x34, 0xEA, 0x22, 0xA1, 0xAE, 0x8D, 0xA8, 0x9D, 0x5F, 0x10, 0x62, 0xAD, 0x7E, 0x04, 0x0A, 
//0xC5, 0x6D, 0x1A, 0xF8, 0x23, 0xD6, 0xAA, 0x10, 0xA8, 0x1C, 0x62, 0x03, 0x8E, 0x39, 0xE5, 0x40, 
//0x3E, 0x4C, 0xE8, 0xFE, 0xF8, 0x05, 0xE2, 0x87, 0x92, 0x75, 0xB9, 0x34, 0x72, 0x02, 0x00, 0x00, 
//0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
//};
////35*16 + 10 = 570
